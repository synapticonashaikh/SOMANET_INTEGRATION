<preCompilationAnalysis file="/home/synapticon/Desktop/somanet_software/sc_base/module_upy/py/sequence.c">
  <fCall global="true" name="mp_seq_multiply"/>
  <fCall global="true" name="mp_seq_multiply.nstackwords"/>
  <fCall global="true" name="memcpy.nstackwords"/>
  <fCall global="true" name="mp_seq_multiply.maxcores"/>
  <fCall global="true" name="mp_seq_multiply.maxtimers"/>
  <fCall global="true" name="mp_seq_multiply.maxchanends"/>
  <fCall global="true" name="mp_seq_extract_slice"/>
  <fCall global="true" name="mp_seq_extract_slice.nstackwords"/>
  <fCall global="true" name="mp_obj_new_list.nstackwords"/>
  <fCall global="true" name="mp_obj_list_append.nstackwords"/>
  <fCall global="true" name="mp_seq_extract_slice.maxcores"/>
  <fCall global="true" name="mp_obj_list_append.maxcores"/>
  <fCall global="true" name="mp_obj_new_list.maxcores"/>
  <fCall global="true" name="mp_seq_extract_slice.maxtimers"/>
  <fCall global="true" name="mp_obj_list_append.maxtimers"/>
  <fCall global="true" name="mp_obj_new_list.maxtimers"/>
  <fCall global="true" name="mp_seq_extract_slice.maxchanends"/>
  <fCall global="true" name="mp_obj_list_append.maxchanends"/>
  <fCall global="true" name="mp_obj_new_list.maxchanends"/>
  <fCall global="true" name="mp_seq_cmp_bytes"/>
  <fCall global="true" name="mp_seq_cmp_bytes.nstackwords"/>
  <fCall global="true" name="memcmp.nstackwords"/>
  <fCall global="true" name="mp_seq_cmp_bytes.maxcores"/>
  <fCall global="true" name="memcmp.maxcores"/>
  <fCall global="true" name="mp_seq_cmp_bytes.maxtimers"/>
  <fCall global="true" name="memcmp.maxtimers"/>
  <fCall global="true" name="mp_seq_cmp_bytes.maxchanends"/>
  <fCall global="true" name="memcmp.maxchanends"/>
  <fCall global="true" name="mp_seq_cmp_objs"/>
  <fCall global="true" name="mp_seq_cmp_objs.nstackwords"/>
  <fCall global="true" name="mp_obj_equal.nstackwords"/>
  <fCall global="true" name="mp_binary_op.nstackwords"/>
  <fCall global="true" name="mp_seq_cmp_objs.maxcores"/>
  <fCall global="true" name="mp_binary_op.maxcores"/>
  <fCall global="true" name="mp_obj_equal.maxcores"/>
  <fCall global="true" name="mp_seq_cmp_objs.maxtimers"/>
  <fCall global="true" name="mp_binary_op.maxtimers"/>
  <fCall global="true" name="mp_obj_equal.maxtimers"/>
  <fCall global="true" name="mp_seq_cmp_objs.maxchanends"/>
  <fCall global="true" name="mp_binary_op.maxchanends"/>
  <fCall global="true" name="mp_obj_equal.maxchanends"/>
  <fCall global="true" name="mp_seq_index_obj"/>
  <fCall global="true" name="mp_seq_index_obj.nstackwords"/>
  <fCall global="true" name="mp_obj_get_type.nstackwords"/>
  <fCall global="true" name="mp_get_index.nstackwords"/>
  <fCall global="true" name="mp_raise_ValueError.nstackwords"/>
  <fCall global="true" name="mp_seq_index_obj.maxcores"/>
  <fCall global="true" name="mp_get_index.maxcores"/>
  <fCall global="true" name="mp_obj_get_type.maxcores"/>
  <fCall global="true" name="mp_raise_ValueError.maxcores"/>
  <fCall global="true" name="mp_seq_index_obj.maxtimers"/>
  <fCall global="true" name="mp_get_index.maxtimers"/>
  <fCall global="true" name="mp_obj_get_type.maxtimers"/>
  <fCall global="true" name="mp_raise_ValueError.maxtimers"/>
  <fCall global="true" name="mp_seq_index_obj.maxchanends"/>
  <fCall global="true" name="mp_get_index.maxchanends"/>
  <fCall global="true" name="mp_obj_get_type.maxchanends"/>
  <fCall global="true" name="mp_raise_ValueError.maxchanends"/>
  <fCall global="true" name="mp_seq_count_obj"/>
  <fCall global="true" name="mp_seq_count_obj.nstackwords"/>
  <fCall global="true" name="mp_seq_count_obj.maxcores"/>
  <fCall global="true" name="mp_seq_count_obj.maxtimers"/>
  <fCall global="true" name="mp_seq_count_obj.maxchanends"/>
  <fCall global="true" name="mp_obj_new_list"/>
  <fCall global="true" name="mp_obj_list_append"/>
  <fCall global="true" name="memcmp"/>
  <fCall global="true" name="mp_obj_equal"/>
  <fCall global="true" name="mp_binary_op"/>
  <fCall global="true" name="mp_obj_get_type"/>
  <fCall global="true" name="mp_get_index"/>
  <fCall global="true" name="mp_raise_ValueError"/>
  <fCall global="true" name="memcpy"/>
</preCompilationAnalysis>
